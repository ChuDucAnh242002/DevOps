stages:
  - build
  - test
  - deploy

# Define a global Docker image for the entire pipeline
image: docker_image

# Variables to configure Docker and Docker Compose
# variables:
#   DOCKER_DRIVER: overlay2
#   DOCKER_TLS_CERTDIR: "/certs"
#   DOCKER_HOST: "tcp://docker:2375" # Use Docker-in-Docker (DinD)

# Build stage: Build the Docker images for all services in docker-compose.yml
build:
  stage: build
  image: docker_image
  # services:
  #   - docker_image-dind # Docker-in-Docker service for building images
  script:
    - echo "Checking the repository structure..."
    - ls -alh # List files in the repository to verify if docker-compose.yml is present
    - echo "Building the Docker images using docker-compose..."
    - docker-compose -f docker-compose.yml build # Explicitly reference docker-compose.yml
  artifacts:
    expire_in: 1 hour
    paths:
      - docker-compose.yml # Store docker-compose file as an artifact
  tags:
    - token1

test:
  stage: test
  script:
    - docker pull $DOCKER_TAG
    - docker run --rm -d -p 8080:80 --name nginx-test $DOCKER_TAG
    - sleep 5
    - curl -f http://localhost:8080 || exit 1
    - docker stop nginx-test
  tags:
    - token1

deploy:
  stage: deploy
  script:
    - docker pull $DOCKER_TAG
    - docker stop nginx-app || true
    - docker rm nginx-app || true
    - docker run -d -p 80:80 --name nginx-app $DOCKER_TAG
  tags:
    - token1
